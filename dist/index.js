import*as $t from"dotenv";import ot from"mongoose";var Kt=async()=>{let t=process.env,r=t.DB_USERNAME&&t.DB_PASSWORD?`${t.DB_USERNAME}:${t.DB_PASSWORD}@`:"",e=`${t.DB_PROTOCOL||"mongodb://"}${r}${t.DB_URL||"localhost:27017"}/${t.DB_NAME||"smanis"}?authSource=admin`;console.log(`Connecting to MongoDB ${e}`),ot.set("strictQuery",!1),await ot.connect(e),console.log("Connect succeeded")},st=Kt;import{fastify as ur}from"fastify";import pr from"@fastify/swagger";import cr from"@fastify/swagger-ui";import fr from"@fastify/multipart";import yr from"@fastify/cors";import it from"argon2";import Q from"jsonwebtoken";var Wt=()=>process.env.PRODUCTION==="true",_=Wt;import{createHash as Qt}from"crypto";var y=async t=>await it.hash(t),T=async(t,r)=>{try{return await it.verify(t,r)}catch(e){return console.log(e),!1}},Y=()=>process.env.JWT_SECRET||"",k=(t,r,e)=>e?Q.sign({id:t,type:r},Y(),{algorithm:"HS256",expiresIn:e}):Q.sign({id:t,type:r},Y()),p=(t="")=>{try{return Q.verify(t,Y())}catch(r){_()||console.log(r);return}},at=t=>Qt("sha3-512").update(t).digest("hex");var Yt=t=>{if(t==="student")return 1;if(t==="admin")return 2;if(t==="superAdmin")return 3},B=(t,r)=>{t.addHook("preValidation",async(e,n)=>{let o=e.headers.authorization||"",{id:s,type:a}=p(o)||{},i=Yt(a);if(!(s&&i&&i&&i>=r))return n.code(401).send({code:404,message:"Unauthorized"})})};var Vt=(t,r)=>{r.forEach(e=>{e(t)})},q=Vt;import{Type as w}from"@sinclair/typebox";import H from"http-errors";import{model as Gt,Schema as Xt}from"mongoose";var Zt=new Xt({username:{type:String,required:!0},password:{type:String,required:!0},isSuperAdmin:{type:Boolean,default:!1,required:!0}},{collection:"admins"}),S=Gt("admins",Zt);var te=async(t,r)=>await t.findById(r).exec(),C=te;var ee=async t=>await C(S,t),c=ee;var re=t=>Object.fromEntries(Object.entries(t).filter(([r,e])=>e!==void 0&&e!=="")),J=re;var ne=async(t,r)=>{let e=J(r);await t.updateOne(e).exec()},N=ne;var oe=async(t,r)=>{let e={username:r.username,password:r.password&&await y(r.password),isSuperAdmin:r.isSuperAdmin};await N(t,e)},dt=oe;import{Type as A}from"@sinclair/typebox";var j=A.String({minLength:2,maxLength:128}),g=A.String({minLength:8,maxLength:128}),zr=A.Union([A.Literal("admin"),A.Literal("superAdmin"),A.Literal("student")]),m=A.String({minLength:24,maxLength:24}),V=A.Record(A.String(),A.Integer());var se=async()=>await S.find({isSuperAdmin:!0}).count().exec(),mt=se;var ie=w.Object({adminId:w.Optional(m),newUsername:w.Optional(j),password:w.Optional(g),newPassword:w.Optional(g),newIsSuperAdmin:w.Optional(w.Boolean())}),ae=w.Object({adminId:w.Optional(w.String()),username:w.String(),passwordChanged:w.Boolean(),isSuperAdmin:w.Boolean()}),de=t=>{t.post("/modify",{schema:{body:ie,response:{201:ae}}},async(r,e)=>{let{adminId:n,newUsername:o,password:s,newPassword:a,newIsSuperAdmin:i}=r.body,d=p(r.headers.authorization||"")?.id||"",u=await c(d);if(!u)return e.status(404).send(H.NotFound(`Admin ${d} not found`));if(u.isSuperAdmin){if(n&&(u=await c(n),!u))return e.status(404).send(H.NotFound(`Admin ${n} not found`));if(i===!1&&await mt()<=1)return e.status(400).send(H.BadRequest("Cannot remove last Super Admin"))}else if(i||!s||!await T(u.password,s))return e.status(403).send(H.Forbidden("You need to be superAdmin."));return await dt(u,{username:o,password:a}),e.status(201).send({id:u._id.toString(),username:o||u.username,passwordChanged:a!==void 0,isSuperAdmin:i!==void 0?i:u.isSuperAdmin})})},ut=de;import{Type as x}from"@sinclair/typebox";import ft from"http-errors";import pe from"mongoose";import{model as me,Schema as pt}from"mongoose";var ue=new pt({username:{type:String,required:!0},password:{type:String,required:!0},admin:{type:pt.Types.ObjectId,ref:S,required:!0}},{collection:"students"}),l=me("students",ue);var ce=async t=>{let{adminId:r,offset:e,count:n}=t,o=new pe.Types.ObjectId(r),s=await l.find({admin:o}).count().exec(),a=await l.find({admin:o}).skip(e).limit(n).exec(),i=e+n<s;return{length:s,hasNext:i,students:a}},ct=ce;var fe=x.Object({adminId:x.Optional(m),offset:x.Integer(),count:x.Integer()}),ye=x.Object({hasNext:x.Boolean(),length:x.Integer(),students:x.Array(x.Object({studentId:x.String(),username:x.String(),admin:x.String()}))}),ge=t=>{t.get("/students",{schema:{querystring:fe,response:{200:ye}}},async(r,e)=>{let n=p(r.headers.authorization)?.id||"",o=await c(n);if(!o)return e.status(404).send(ft.NotFound("Admin not found."));let{adminId:s,offset:a,count:i}=r.query;if(s&&s!==n&&!o.isSuperAdmin)return e.status(403).send(ft.Forbidden("Need to be superAdmin to get other admin's students."));let d=await ct({adminId:s||n,offset:a,count:i}),u=d.students.map(O=>({studentId:O._id.toString(),username:O.username,admin:O.admin._id.toString()}));return e.status(200).send({...d,students:u})})},yt=ge;import{Type as f}from"@sinclair/typebox";import $ from"http-errors";var le=async t=>await C(l,t),R=le;import{model as Se,Schema as gt}from"mongoose";var we=new gt({video:{type:String,required:!0},score:{type:Number,required:!0},points:{type:Map,of:Number,required:!0,default:{}},student:{type:gt.Types.ObjectId,ref:l,required:!0},takenTime:{type:Date,required:!0,default:()=>new Date(Date.now())}},{collection:"exams"}),E=Se("exams",we);var Ie=async(t,r)=>{let e=J(r),n=new t(e);return await n.save(),n},L=Ie;var xe=async(t,r,e,n)=>L(E,{video:t,score:r,points:e,student:n,takenTime:new Date(Date.now())}),lt=xe;import"dotenv/config";import Re from"ali-oss";var he=new Re({region:process.env.OSS_REGION||"",bucket:process.env.OSS_BUCKET||"smanis",secure:!0,accessKeyId:process.env.OSS_ACCESS_KEY_ID||"",accessKeySecret:process.env.OSS_ACCESS_KEY_SECRET||""}),G=he;var be=f.Object({video:f.Object({filename:f.String(),mimetype:f.String()}),score:f.Object({value:f.Integer()}),points:f.Object({value:f.String()}),student:f.Object({value:m})}),Ee=f.Object({video:f.String(),score:f.Integer(),points:f.Record(f.String(),f.Integer()),student:f.String()}),Te=t=>{t.post("/submitExam",{schema:{body:be,response:{201:Ee}}},async(r,e)=>{let n=p(r.headers.authorization||"")?.id||"",o=await c(n);if(!o)return e.status(404).send($.NotFound(`Admin ${n} not found`));let{video:s,score:a,points:i,student:d}=r.body,u=await s.toBuffer(),O=a.value,M=JSON.parse(i.value);if(typeof M=="object")for(let[Ht,zt]of Object.entries(M)){let nt=parseInt(Ht),W=parseInt(zt);if(!Number.isInteger(nt)||!Number.isInteger(W)||nt<=0||W!==8&&W!==10)return e.status(400).send($.BadRequest("points key and value must be number"))}else return e.status(400).send($.BadRequest("points must be an object"));let I=d.value,v=await R(I);if(!v)return e.status(404).send($.NotFound(`Student ${I} not found`));if(!o.isSuperAdmin&&v.admin.toString()!==n)return e.status(401).send($.NotFound(`Submit exam associate with student ${I} is not allowed`));let et=new Date(Date.now()).toJSON(),Jt=`${v._id.toString()}/${et}-${at(et)}-${Math.round(Math.random()*100)}.mp4`,rt=(await G.put(Jt,u)).url;return await lt(rt,O,M,v),e.status(201).send({video:rt,score:O,points:M,student:I})})},St=Te;import{Type as It}from"@sinclair/typebox";import X from"http-errors";var Ae=async t=>await C(E,t),z=Ae;var Pe=async(t,r)=>{let n={score:Object.values(r).reduce((o,s)=>o+s),points:r};await N(t,n)},wt=Pe;var Oe=It.Object({examId:m,points:V}),ve=It.Object({examId:m,points:V}),qe=t=>{t.post("/changeExam",{schema:{body:Oe,response:{201:ve}}},async(r,e)=>{let{id:n=""}=p(r.headers.authorization||"")||{},o=await c(n);if(!o)return e.status(404).send(X.NotFound(`Admin ${n} not found`));let{examId:s,points:a}=r.body,i=await z(s);if(!i)return e.status(404).send(X.NotFound(`Exam ${s} not found`));if(!o.isSuperAdmin){let d=await R(i.student._id);if(!d||d.admin._id.toString()!==n)return e.status(403).send(X.Forbidden(`Change exam ${s} is not allowed`))}return await wt(i,a),e.status(201).send({examId:s,points:a})})},xt=qe;var je=(t,r,e)=>{B(t,2),q(t,[ut,yt,St,xt]),e()},ht=je;import{Type as U}from"@sinclair/typebox";import Fe from"http-errors";var Me=U.Object({id:m,password:g}),_e=U.Object({id:U.String(),username:U.String(),token:U.String()}),ke=t=>{t.post("/loginStudent",{schema:{body:Me,response:{200:_e}}},async(r,e)=>{try{let{id:n,password:o}=r.body,s=await R(n);if(!s)throw"";let a=s.username,i=s.password;if(await T(i,o))return e.status(200).send({token:k(n,"student"),id:n,username:a});throw""}catch{return e.status(400).send(Fe.BadRequest("Wrong id or password"))}})},bt=ke;import{Type as D}from"@sinclair/typebox";import Be from"http-errors";var Ce=D.Object({id:m,password:g}),Ne=D.Object({id:D.String(),username:D.String(),isSuperAdmin:D.Boolean(),token:D.String()}),Le=t=>{t.post("/loginAdmin",{schema:{body:Ce,response:{200:Ne}}},async(r,e)=>{try{let{id:n,password:o}=r.body,s=await c(n);if(!s)throw"";let a=s.username,i=s.password;if(await T(i,o))return e.status(200).send({token:k(n,"admin"),id:n,username:a,isSuperAdmin:s.isSuperAdmin});throw""}catch{return e.status(400).send(Be.BadRequest("Wrong id or password"))}})},Et=Le;var De=(t,r,e)=>{q(t,[bt,Et]),e()},Tt=De;import{Type as K}from"@sinclair/typebox";import Ue from"http-errors";var $e=async(t,r,e)=>L(S,{username:t,password:await y(r),isSuperAdmin:e}),At=$e;var Je=K.Object({username:j,password:g,isSuperAdmin:K.Boolean()}),He=K.Object({id:K.String()}),ze=t=>{t.post("/registerAdmin",{schema:{body:Je,response:{201:He}}},async(r,e)=>{let{username:n,password:o,isSuperAdmin:s}=r.body,a=await At(n,o,s);return a?e.status(201).send({id:a._id.toString()}):e.status(400).send(Ue.BadRequest("bad username or password or isSuperAdmin"))})},Pt=ze;import{Type as Z}from"@sinclair/typebox";import vt from"http-errors";var Ke=async(t,r,e)=>L(l,{username:t,password:await y(r),admin:e}),Ot=Ke;var We=Z.Object({username:j,password:g,adminId:m}),Qe=Z.Object({id:Z.String()}),Ye=t=>{t.post("/registerStudent",{schema:{body:We,response:{201:Qe}}},async(r,e)=>{let{username:n,password:o,adminId:s}=r.body,a=await c(s);if(!a)return e.status(400).send(vt.BadRequest("bad adminId"));let i=await Ot(n,o,a);return i?e.status(201).send({id:i._id.toString()}):e.status(400).send(vt.BadRequest("bad username or password"))})},qt=Ye;var Ve=(t,r,e)=>{B(t,3),q(t,[qt,Pt]),e()},jt=Ve;import{Type as P}from"@sinclair/typebox";import tt from"http-errors";var Ge=P.Object({examId:m}),Xe=P.Object({examId:P.String(),video:P.String(),score:P.Integer(),points:P.Record(P.String(),P.Number()),student:P.String(),takenTime:P.String()}),Ze=t=>{t.get("/exam",{schema:{querystring:Ge,response:{200:Xe}}},async(r,e)=>{let{examId:n}=r.query,o=await z(n);if(!o)return e.status(404).send(tt.NotFound(`Exam with ID ${n}  not found`));let{id:s="",type:a}=p(r.headers.authorization)||{},i=o.student._id.toString();if(a==="admin"){let d=await c(s);if(!d||!d.isSuperAdmin){let u=await R(i);if(!u||u.admin._id.toString()!==d?._id.toString())return e.status(403).send(tt.Forbidden("Not your student's exam"))}}else if(s!==i)return e.status(401).send(tt.Unauthorized(`Exam ${n} is not your exam`));return e.status(200).send({examId:o._id.toString(),video:o.video,score:o.score,points:o.points,student:o.student._id.toString(),takenTime:o.takenTime.toJSON()})})},Ft=Ze;import{Type as h}from"@sinclair/typebox";import _t from"http-errors";import tr from"mongoose";var er=async t=>{let{studentId:r,offset:e,count:n}=t,o=new tr.Types.ObjectId(r),s=await E.find({student:o}).count().exec(),a=await E.find({student:o}).skip(e).limit(n).exec(),i=e+n<s;return{length:s,hasNext:i,exams:a}},Mt=er;var rr=h.Object({studentId:h.Optional(m),offset:h.Integer(),count:h.Integer()}),nr=h.Object({hasNext:h.Boolean(),length:h.Integer(),exams:h.Array(h.Object({studentId:h.String(),score:h.Integer(),takenTime:h.String()}))}),or=t=>{t.get("/exams",{schema:{querystring:rr,response:{200:nr}}},async(r,e)=>{let{studentId:n,offset:o,count:s}=r.query,{id:a="",type:i}=p(r.headers.authorization)||{},d="";if(i==="student")d=a;else{if(!n)return e.status(400).send(_t.BadRequest("StudentId is required"));let I=await c(a),v=await R(n);if(!I||!v||!I.isSuperAdmin&&v.admin._id.toString()!==I._id.toString())return e.status(403).send(_t.Forbidden("Not your student"));d=v._id.toString()}let{hasNext:u,length:O,exams:M}=await Mt({studentId:d,offset:o,count:s});return e.status(200).send({hasNext:u,length:O,exams:M.map(I=>({studentId:I._id.toString(),score:I.score,takenTime:I.takenTime.toJSON()}))})})},kt=or;import{Type as F}from"@sinclair/typebox";import Ct from"http-errors";var sr=async(t,r)=>{let e={username:r.username,password:r.password&&await y(r.password),admin:r.admin};await N(t,e)},Bt=sr;var ir=F.Object({newUsername:F.Optional(j),password:g,newPassword:F.Optional(g)}),ar=F.Object({id:F.String(),username:F.String(),passwordChanged:F.Boolean()}),dr=t=>{t.post("/modify",{schema:{body:ir,response:{201:ar}}},async(r,e)=>{let{newUsername:n,password:o,newPassword:s}=r.body,{id:a="",type:i}=p(r.headers.authorization||"")||{},d;return i!=="student"?e.status(403).send(Ct.Forbidden("You are not a student. If you are an admin, please use admin/changeStudent instead.")):(d=await R(a),!d||!o||!await T(d.password,o)?e.status(401).send(Ct.Unauthorized("Need student's correct password.")):(await Bt(d,{username:n,password:s}),e.status(201).send({id:d._id.toString(),username:n||d.username,passwordChanged:s!==void 0})))})},Nt=dr;var mr=(t,r,e)=>{B(t,1),q(t,[Nt,Ft,kt]),e()},Lt=mr;$t.config();var gr=k("id","type"),Dt=p(gr);if(Dt?.id!=="id"||Dt?.type!=="type")throw"jwt error";var lr=await y("password");if(!await T(lr,"password"))throw"pwd error";await st();if(!_()&&(await E.find().exec()).length===0&&(await l.find({username:"testStudent"}).exec()).length===0&&(await S.find({username:"testAdmin",isSuperAdmin:!1}).exec()).length===0&&(await S.find({username:"testSuperAdmin",isSuperAdmin:!0}).exec()).length===0){let t=new S({username:"testAdmin",password:await y("testPassword"),students:await l.find().exec()});await t.save();let r=new l({username:"testStudent",password:await y("testPassword"),admin:t});await r.save();let e=new S({username:"testSuperAdmin",password:await y("testPassword"),isSuperAdmin:!0});await e.save();let n=new l({username:"testStudent",password:await y("testPassword"),admin:e});await n.save(),await new E({video:"testVideoUrl",score:0,student:r}).save(),await new E({video:"testVideoUrl",score:0,student:n}).save()}var b=ur({logger:{level:_()?"info":"debug"}});_()||(await b.register(pr),await b.register(cr,{routePrefix:"/documentation",uiConfig:{docExpansion:"full",deepLinking:!1},uiHooks:{onRequest:(t,r,e)=>{e()},preHandler:(t,r,e)=>{e()}},staticCSP:!0,transformStaticCSP:t=>t,transformSpecification:t=>t,transformSpecificationClone:!0}),b.get("/hello",()=>({hello:"world"})));await b.register(fr,{attachFieldsToBody:!0});await b.register(yr,{allowedHeaders:["Content-Type","Authorization"]});await b.register(ht,{prefix:"/admin"});await b.register(jt,{prefix:"/super"});await b.register(Lt,{prefix:"/student"});await b.register(Tt);await b.ready();var Ut=parseInt(process.env.PORT||"20080"),Sr=process.env.PROTOCOL||"http",wr=process.env.HOST||"127.0.0.1",Ir=`${Sr}://${wr}:${Ut}`;b.listen({port:Ut}).catch(t=>{b.log.error(t),process.exit(1)});console.log(`Backend server started at ${Ir}`);export{b as fastify};
//# sourceMappingURL=index.js.map
